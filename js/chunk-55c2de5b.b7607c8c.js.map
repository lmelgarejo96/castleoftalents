{"version":3,"sources":["webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///../../../src/components/VTextField/index.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///../../../src/components/VForm/VForm.ts","webpack:///./node_modules/core-js/modules/es.string.ends-with.js","webpack:///./src/assets/img/no-image.png"],"names":["name","model","prop","event","props","chips","clearable","type","default","counterSizeString","counterString","placeholder","prependIcon","readonly","showSize","Boolean","validator","v","includes","smallChips","truncateLength","Number","value","val","computed","classes","computedCounterValue","fileCount","this","isMultiple","lazyValue","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","base","internalValue","get","set","isDirty","length","isLabelActive","$attrs","hasOwnProperty","text","map","file","truncatedText","hasChips","watch","handler","immediate","$refs","input","methods","clearableCallback","genChips","small","on","genInput","genPrependSlot","icon","genIcon","genSlot","genSelectionText","genSelections","children","$scopedSlots","index","$createElement","staticClass","class","selection","genTextFieldSlot","node","click","onInput","files","e","onKeyDown","truncateText","str","charsKeepOneSide","Math","defaultMenuProps","offsetY","offsetOverflow","transition","VSelect","allowOverflow","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","undefined","data","lazySearch","selectedIndex","computedItems","selectedValues","selectedItems","item","hasDisplayedItems","hideSelected","filteredItems","some","currentRange","selectedItem","String","getText","internalSearch","allItems","isAnyValueAllowed","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","i","listData","items","isFocused","document","isMenuActive","oldVal","activateMenu","created","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","currentItem","getDisabled","newIndex","VTextField","genInputSlot","slot","hasSlot","onClick","target","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItemText","delimiters","returnObject","editingIndex","$slots","delimiter","d","genChipSelection","chip","dblclick","onChipInput","onEnterDown","getMenuIndex","selectionStart","setValue","updateEditing","updateCombobox","isUsingSlot","updateTags","menuIndex","onPaste","pastedItemText","findExistingIndex","inheritAttrs","lazyValidation","inputs","watchers","errorBag","errors","Object","deep","watchInput","watcher","_uid","valid","shouldValidate","validate","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","unwatch","render","h","attrs","novalidate","attrs$","submit","$","getOwnPropertyDescriptor","f","toLength","notARegExp","requireObjectCoercible","correctIsRegExpLogic","IS_PURE","nativeEndsWith","endsWith","min","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","descriptor","prototype","writable","proto","forced","searchString","that","endPosition","arguments","len","end","search","call","slice","module","exports"],"mappings":"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","file":"js/chunk-55c2de5b.b7607c8c.js","sourcesContent":["// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : undefined\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropType } from 'vue'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | undefined>,\n      default: undefined,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => this.filter(item, String(this.internalSearch), String(this.getText(item))))\n    },\n    internalSearch: {\n      get (): string | undefined {\n        return this.lazySearch\n      },\n      set (val: any) {\n        this.lazySearch = val\n\n        this.$emit('update:search-input', val)\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = undefined\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      if (this.readonly) return\n\n      const index = this.selectedItems.length - 1\n\n      if (this.selectedIndex === -1 && index !== 0) {\n        this.selectedIndex = index\n        return\n      }\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n\n      if (this.getDisabled(currentItem)) return\n\n      const newIndex = this.selectedIndex === index\n        ? this.selectedIndex - 1\n        : this.selectedItems[this.selectedIndex + 1]\n          ? this.selectedIndex\n          : -1\n\n      if (newIndex === -1) {\n        this.setValue(this.multiple ? [] : undefined)\n      } else {\n        this.selectItem(currentItem)\n      }\n\n      this.selectedIndex = newIndex\n    },\n    clearableCallback () {\n      this.internalSearch = undefined\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = input.data || {}\n      input.data.attrs = input.data.attrs || {}\n      input.data.attrs.autocomplete = input.data.attrs.autocomplete || 'off'\n\n      input.data.domProps = input.data.domProps || {}\n      input.data.domProps.value = this.internalSearch\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections () {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick () {\n      if (this.isDisabled) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown () {\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData!.setData('text/plain', currentItemText)\n      event.clipboardData!.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropType } from 'vue'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array as PropType<string[]>,\n      default: () => ([]),\n    },\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value != null ? value : this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      value[this.editingIndex] = this.internalSearch\n\n      this.setValue(value)\n\n      this.editingIndex = -1\n    },\n    updateCombobox () {\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n\n      // If search is not dirty and is\n      // using slot, do nothing\n      if (isUsingSlot && !this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot\n      // to avoid a double input\n      if (isUsingSlot) this.internalSearch = undefined\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n      if (menuIndex < 0 &&\n        !this.searchIsDirty\n      ) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData!.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n  },\n})\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  inheritAttrs: false,\n\n  props: {\n    lazyValidation: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeEndsWith = ''.endsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.endsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.endswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = String(searchString);\n    return nativeEndsWith\n      ? nativeEndsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","module.exports = __webpack_public_path__ + \"img/no-image.f98b32ce.png\";"],"sourceRoot":""}